//扫雷
//text.c
#include <stdio.h>
void menu(){
    printf("*************************\n");
    printf("********  1.play  *******\n");
    printf("********  0.exit  *******\n");
    printf("*************************\n");

}
void game(){
    char mine[ROWS][COLS] = { 0 };
    char show[ROWS][COLS] = { 0 };
    //初始化棋盘
    InitBoard(mine,ROWS,COLS,'0');
    InitBoard(show,ROWS,COLS,'*');\
    //打印一下棋盘
    DisplayBoard(mine,ROW,COL);
    DisplayBoard(show,ROW,COL);

    //布置雷
    SetMine(mine,ROW,COL);
    DisplayBoard(mine,ROW,COL);
    //排查雷
    FidMine(mine,show,ROW,COL);


}

int main(){
    int input = 0;
    srand((unsigned int )time(NULL));
    do{
        menu();
        printf("请选择:");
        scanf("%d",&input);
        switch(input){
        case 1:
            printf("扫雷\n");
            game();
            break;
        case 0:
            printf("退出游戏\n");
            break;
        default:
            printf("选择错误,重新选择\n");
            break;

        }

    }while(input)

    
    return 0;
}


















//game.h
#include <stdio.h>
#define ROW 3
#define COL 3

#define ROWS ROW+2
#define COLS COL+2

//初始化棋盘
 void InitBoard(char board[ROWS][COLS],int rows,inr cols,int set);
 //打印棋盘
void DisplayBoard(char board[ROWS][COLS],int row,inr col);
//布置雷
void SetMine(char mine[ROW][COL],int row, int col);
 //排查雷
void FidMine(char mine[ROWS][COLS],char show[ROWS][COLS],int row, int col);
































//game.c

#include "game.h"
 void InitBoard(char board[ROWS][COLS],int rows,int cols,char set){
    int i = 0;
    int j = 0;   
    for(i = 1; i <= col; i++){
        printf("%d",i);
    }
      printf("\n");

    for(i = 0;i < rows;i++){
        for(j = 0; j < cols;j++){
            board[i][j]=set;
        }
    }
    


void DisplayBoard(char board[ROWS][COLS],int row,inr col){
    int i = 0;
    int j = 0;
    for(i = 0;i < row;i++){
        for(j = 0; j < col;j++){
            printf("%c", board[i][j]);
        }
        printf("\n")
    }
}
void SetMine(char mine[ROW][COL],int row, int col){
    //
    int count =10;
    while(count){
        int x = rand()%row+1;
        int y = rand()%col+1;
        if(mine[x][y]=='0'){
            mine[x][y]='1';
            count--;
        }

    }

}

int get_mine_count(char mine[ROWS][COLS],int x, int y){
    return mine[x-1][y]+mine[x-1][y-1]+mine[x][y-1]+mine[x+1][y-1]+mine[x+1][y]+mine[x11][y+1]+
    mine[x][y+1]+mine[x-1][y+1]-8*'0';
}
void FidMine(char mine[ROWS][COLS],char show[ROWS][COLS],int row, int col){
    int x = 0;
    int y = 0;
    while(1){
        
    printf("请输入要排查的坐标");
    scanf("%d%d",&x,&y);
    if(x >= 1 &&x <= row && y >= 1 && y < col){
        if(mine[x][y]=='1'){
            printf("你被炸死了");
            DisplayBoard(mine,ROW,COL);
            break;

        }else{
            int count =get_mine_count(mine , x, y);
            show[x][y]=count+'0';
            DisplayBoard(show,ROW,COL);

        }

    }else{
        printf("坐标不合标准,请重新输入");
    }

    }
}


}


