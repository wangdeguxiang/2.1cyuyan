//算数操作符:+ - * / %
//移位操作符：<<   >>
//位操作符：&按位与 |按位或 ^按位异或
//赋值操作符：=    +=   -=  &=   ^=  /=   *=   |=    >>=     <<=
//单目操作符：！  -   +   &   sizeof  ~   --  ++     *                                     (类型)
//关系操作符：>=   <=   ==    !=
//逻辑操作符:  &&并且    || 和
//条件操作符：  exp1?exp2:exp3
//逗号表达式：  exp1，exp2，exp3，...expN
//下标引用、函数调用和结构成员
// []   ()  .   ->
/*
常见关键字：
auto 自动的   break  case  char  const变量   continue继续  default 默认  do    double   else   enum 枚举
extern  申明外部符号  float   for   goto   if  int   long    register 寄存器关键字  return   short    signed有符号的
sizeof   static静态的  struct   switch   typedef    union联合体  unsigned 无符号的   void 无  volatile     while

*/


int main(){
    int a =2;
    int b =a << 1;
    //int b =a >> 1;
    printf("%d\n",b);
    return 0;

}


int main(){
    int a =2;
    a=a + 5;
    //a +=5;
    
    printf("%d\n",a);
    return 0;

}



int main(){
    //0表示假  非0为1
    int a =0;
    printf("%d\n",!a);
    return 0;

}




int main(){
   //sizeof是一个操作符
   //不是函数
   //计算类型或变量的大小
    printf("%d\n",sizeof(int));

    int arr[10]={0};
    printf("%d\n",sizeof(arr));//计算的是数组的总大小，单位是字节
    printf("%d\n",sizeof(arr[0]));//4


    //计算数组的元素个数
    int  g=sizeof(arr)/sizeof(arr[0]);
    printf("%d\n",sizeof(g));

    return 0;

}




int main(){
   //按位取反  ~
    int a =0;
    printf("%d\n",~a);//-1
    return 0;

}



int main(){
   int a = 10;
   int b =++a;//前置++  先++ 后使用
   printf("%d\n",b);//11
   printf("%d\n",a);//11

}


int main(){
    //强制类型转换
    int a =(float)3.14;
    printf("%d\n",~a);//-1
    return 0;

}



int main(){
    int a = 0;
    int b = 9;
    int max =0;
    max = a > b ? a : b;
}

